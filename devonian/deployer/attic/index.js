'use strict'

var commons = require('./commons')
var checkSystem = require('./check-system')
var imageInstaller = require('./image-installer')
var checkParameters = require('./check-parameters')
var storageLimitSetter = require('./storagelimit-setter')
var volumeContainerCreator = require('./volume-container-creator')
var serviceContainerCreator = require('./service-container-creator')
var healthcheckSetup = require('./healthcheck-setup')
var maintenanceSetup = require('./maintenance-setup')
var networkCreator = require('./network-creator')
var imageProvider = require('./image-provider')
var planProvider = require('./plan-provider')
var finalizer = require('./finalizer')

var makeStep = (step, msg) => step.apply()
  .then(r => {
    console.log(msg)
    return r
  })
  .catch(err => step.revert(err))
  .catch(err => commons.terminateProcess('Could not revert changes: - ' + err))

module.exports = () => checkParameters()
  .catch(() => commons.terminateProcess('Bad parameters'))
  .then(parameters => planProvider(parameters))
  .catch(err => commons.terminateProcess('Could not prepare deployment plan - ' + err))
  .then(deploymentPlan => checkSystem(deploymentPlan))
  .then(prevStep => makeStep(storageLimitSetter(prevStep), 'Storage limit is set'))
  .then(prevStep => makeStep(networkCreator(prevStep), 'Network is created'))
  .then(prevStep => makeStep(imageProvider(prevStep), 'Container images are ready'))
  .then(prevStep => makeStep(imageInstaller(prevStep), 'Container images are installed'))
  .then(prevStep => makeStep(volumeContainerCreator(prevStep), 'Volume containers are installed'))
  .then(prevStep => makeStep(serviceContainerCreator(prevStep), 'Service containers are installed'))
  .then(prevStep => makeStep(healthcheckSetup(prevStep), 'Healthcheck is scheduled'))
  .then(prevStep => makeStep(maintenanceSetup(prevStep), 'Maintenance tasks are scheduled'))
  .then(prevStep => makeStep(finalizer(prevStep), 'Finalizing'))
  .then(() => console.log('Deployment was successful :)'))
